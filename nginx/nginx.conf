user  nginx;
worker_processes  auto;

events {
  worker_connections  1024; # worker 당 연결 개수
}

http {

  ## 아래 두 줄이 있어야 AWS ELB에서 넘어온 Client Ip가 기록된다
  ## 없으면 ELB IP가 기록된다...
  real_ip_header X-Forwarded-For;
  set_real_ip_from 0.0.0.0/0;

  include /etc/nginx/mime.types;
  
  client_header_timeout 10m;
  client_body_timeout 10m;
  client_max_body_size 10g;

  sendfile on;

  upstream backend {
    server backend:8000;
  }

  upstream channels {
    server channels:8001;
  }

  # disable healthcheck logging 
  map $http_user_agent $ignore_ua {
    default                 1;
    "ELB-HealthChecker/2.0" 0;
  }

  access_log /var/log/nginx/access.log combined if=$ignore_ua;
  error_log /var/log/nginx/error.log;

  # nginx 버전 안 나오게
  server_tokens off;

  server {
    listen 80;
    server_name anhae.site www.anhae.site;

    # IP로 들어올 경우 도메인 이름으로 리디렉션
    # if ($host ~* ^(\d+)\.(\d+)\.(\d+)\.(\d+)$) {
    #     return 308 $scheme://www.anhae.site$request_uri;   
    # }
    #return 301 https://$host$request_uri; # 301로 하면 POST -> GET으로 변경된다.
    return 308 https://$host$request_uri;
  }

  server {
    listen 443 ssl; # managed by Certbot

    # if ($host !~* ^(anhae.site|localhost(:\d+)?)) {
    #   # ip로 들어온 경우
    #   return 308 https://anhae.site$request_uri;
    # }

    index index.html;

    include snippets/error-page.conf;
    
    ssl_certificate /usr/share/nginx/ssl/cert.crt; # managed by Cert>
    ssl_certificate_key /usr/share/nginx/ssl/private.key; # managed by Ce>
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout 5m;
    ssl_ciphers HIGH:!aNULL:!MD5;

    server_name anhae.site www.anhae.site;

    location = /favicon.ico { access_log off; log_not_found off; }

    location / {
      # root를 /usr/share/nginx/html 을 바라보게 했으므로(Dockerfile 참고)
      # 해당 경로 아래에 배포해주면 됨
      root   /usr/share/nginx/react/;
      index  index.html index.htm;
      try_files $uri $uri/ /index.html; # 정적 파일이 없는 url일 경우 index.html을 리턴 하도록 설정
    }

    # backend urls
    location ~ ^/(ws) {
      # 근데 이게 없으면 Websocket이 안된다....
      add_header Access-Control-Allow-Origin *; # nginx와 django 둘 중 한곳에만 cors 정책을 추가해야 한다.

      proxy_pass http://channels;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header Origin http://$host;
    }

    # backend urls
    location ~ ^/(admin|api|graphql) {
      #proxy_redirect off;
      proxy_pass http://backend;
      
      proxy_connect_timeout 600;
      proxy_send_timeout 600;
      proxy_read_timeout 600;
      send_timeout 600;

      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # backend static
    location ~ ^/(staticfiles|media|)/(.*)$ {

      # Preflighted requests, 이게 없으면 OPTIONS을 대응하지 못해서 axios에서 cors 문제가 발생한다.
      if ($request_method = OPTIONS ) {
        add_header "Access-Control-Allow-Origin"  *;
        add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        return 204;
      }

      add_header Access-Control-Allow-Origin *;
      alias /$1/$2;
    }

    # include /etc/nginx/nginx.celery.conf;
    
    # file listing
    location /listing/ {
      add_header Access-Control-Allow-Origin *;

      root /usr/share/nginx/;
      index index.html;
      autoindex on; # 이게 listing 핵심
      autoindex_format json;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
    }

    # domain
    location ^~/.well-known {
      allow all;
      alias /staticfiles/.well-known/;
    }
  }
}