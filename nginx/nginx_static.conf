user  nginx;
worker_processes  1;

events {
  worker_connections  1024; # worker 당 연결 개수
}

http {
  include /etc/nginx/mime.types;
  
  client_header_timeout 10m;
  client_body_timeout 10m;
  client_max_body_size 10g;

  sendfile on;

  access_log /var/log/nginx/static_access.log;
  error_log /var/log/nginx/static_error.log;

  # nginx 버전 안 나오게
  server_tokens off;

  server {
    listen 89 default_server;
    listen [::]:89 default_server;
    server_name localhost;

    location / {
      # root를 /usr/share/nginx/html 을 바라보게 했으므로(Dockerfile 참고)
      # 해당 경로 아래에 배포해주면 됨
      root   /usr/share/nginx/react/;
      index  index.html index.htm;
      try_files $uri $uri/ /index.html; # 정적 파일이 없는 url일 경우 index.html을 리턴 하도록 설정
    }

    # backend static
    location ~ ^/(staticfiles|media|)/(.*)$ {

      # Preflighted requests, 이게 없으면 OPTIONS을 대응하지 못해서 axios에서 cors 문제가 발생한다.
      if ($request_method = OPTIONS ) {
        add_header "Access-Control-Allow-Origin"  *;
        add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        return 204;
      }

      add_header Access-Control-Allow-Origin *;
      alias /$1/$2;
    }
    
    # file listing
    location /listing/ {
      add_header Access-Control-Allow-Origin *;

      root /usr/share/nginx/;
      index index.html;
      autoindex on; # 이게 listing 핵심
      autoindex_format json;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
    }

  }
}