user  nginx;
worker_processes  1;

events {
  worker_connections  1024; # worker 당 연결 개수
}

http {
  include /etc/nginx/mime.types;
  
  client_header_timeout 10m;
  client_body_timeout 10m;
  client_max_body_size 10g;

  sendfile on;

  upstream backend {
    least_conn;

    server backend_a:8000;
  }

  upstream channels {
    least_conn;
    
    server channels:8001;
  }

  # disable healthcheck logging 
  map $http_user_agent $ignore_ua {
    default                 1;
    "ELB-HealthChecker/2.0" 0;
  }

  access_log /var/log/nginx/access.log combined if=$ignore_ua;
  error_log /var/log/nginx/error.log;

  # nginx 버전 안 나오게
  server_tokens off;

  server {
    listen 88 default_server;
    listen [::]:88 default_server;

    server_name localhost;

    index index.html;

    location ~ ^/(ws) {
      # 근데 이게 없으면 Websocket이 안된다....
      add_header Access-Control-Allow-Origin *; # nginx와 django 둘 중 한곳에만 cors 정책을 추가해야 한다.

      proxy_pass http://channels;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header Origin http://$host;
    }

    # backend urls
    location ~ ^/(admin|api) {
      #proxy_redirect off;
      proxy_pass http://backend;
      
      proxy_connect_timeout 600;
      proxy_send_timeout 600;
      proxy_read_timeout 600;
      send_timeout 600;

      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}